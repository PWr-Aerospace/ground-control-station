name: ðŸš€ Build and Release

on:
    push:
        tags:
            - "v*"

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
        name: ðŸš€ Build release
        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v2

            - name: Install latest stable
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable

            - uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Install dependencies (ubuntu only)
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libudev-dev
            - name: Install node
              uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: Build release
              run: npm install -g typescript ; npm install ; cargo install tauri-cli ; cargo tauri build

            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: release-${{ matrix.os }}
                  path: |
                      src-tauri/target/release/bundle/**/*

    release:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Download Artifacts
              uses: actions/download-artifact@v2

            - name: Zip Artifacts
              run: |
                mkdir -p release-ubuntu-latest
                mv ubuntu-latest/* release-ubuntu-latest/
                zip -r release-ubuntu-latest.zip release-ubuntu-latest/
            
                mkdir -p release-macos-latest
                mv macos-latest/* release-macos-latest/
                zip -r release-macos-latest.zip release-macos-latest/

            - name: Get the version
              id: get_version
              run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF#refs/tags/} | sed 's/[^0-9.]*//g')
              shell: bash

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.get_version.outputs.VERSION }}
                  release_name: Release ${{ steps.get_version.outputs.VERSION }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset (ubuntu)
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./release-ubuntu-latest.zip
                  asset_name: release-ubuntu-latest.zip
                  asset_content_type: application/zip

            - name: Upload Release Asset (macos)
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./release-macos-latest.zip
                  asset_name: release-macos-latest.zip
                  asset_content_type: application/zip
